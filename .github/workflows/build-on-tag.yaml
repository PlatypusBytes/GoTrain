name: Build and Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]
        app: [critical_speed, runner]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Build binary
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          OUTPUT="${{ matrix.app }}-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT="${OUTPUT}.exe"
          fi
          env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o $OUTPUT ./cmd/${{ matrix.app }}
          echo "OUTPUT=$OUTPUT" >> $GITHUB_ENV

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*-*-*-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}